version: '3'

services:
  proxy:
    image: nginx:1.25
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "static-volume:/static"
    depends_on:
      - gunicorn
    restart: always
    ports:
      - "8080:80"

  web:
    build:
      context: .
      dockerfile: Dockerfile.gunicorn
    ports:
      - "8000:8000"
    volumes:
      - ".:/weather_project"
      - "./gunicorn.conf.py:/gunicorn.conf.py"
      - "./init.sh:/init.sh"
      - "static-volume:/static"
    command:
      /init.sh
#      python3 manage.py csu &&
#      python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}

  gunicorn:
    build:
      context: .
      dockerfile: Dockerfile.gunicorn
    volumes:
      - ".:/weather_project"
      - "./gunicorn.conf.py:/gunicorn.conf.py"
      - "static-volume:/static"
    depends_on:
      - web
    restart: always
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED}

  database:
    image: postgres:16.3-alpine
    hostname: database
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_DB_PORT:-5432}:5432"

volumes:
  static-volume:
  pg_data: